# Default values for onyxia-bis.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

imagePullSecrets: []

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:
  api:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name:
  ui:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name:

ui:
  replicaCount: 1
  image:
    name: inseefrlab/onyxia-ui
    version: latest
    pullPolicy: Always
  nameOverride: "onyxia-ui"
  fullnameOverride: "onyxia-ui"
  podSecurityContext:
    {}
    # fsGroup: 2000
  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  service:
    type: ClusterIP
    port: 80
  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

api:
  replicaCount: 1
  image:
    name: inseefrlab/onyxia-api
    version: latest
    pullPolicy: Always
  nameOverride: "onyxia-api"
  fullnameOverride: "onyxia-api"
  podSecurityContext:
    {}
    # fsGroup: 2000
  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  service:
    type: ClusterIP
    port: 80
  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  regions: [
  {
    "regionId": "kub",
    "type": "KUBERNETES",
    "namespace-prefix": "user-",
    "publish-domain": "fakedomain.kub.example.com",
    "cloudshell": {
      "catalogId": "inseefrlab-helm-charts",
      "packageName": "cloudshell"
    }
  },
  {
    "regionId": "marathon",
    "type": "MARATHON",
    "serverUrl": "",
    "publish-domain": "fakedomain.marathon.example.com",
    "namespace-prefix": "users",
    "marathon-dns-suffix": "marathon.containerip.dcos.thisdcos.directory",
    "cloudshell": {
      "catalogId": "internal",
      "packageName": "shelly"
    },
    "auth": {
      "token": "xxxxx"
    }
  }
]
## env variable for onyxia api and onyxia ui
env:
  api:
    # - name: marathon.url
    #   value: ""
  ui:
    # - name: REACT_APP_BASE_API_URL
    #   value: ""


ingress:
  enabled: true
  tls: true
  hostname: onyxia.com
  annotations:
    kubernetes.io/ingress.class: nginx
    # nginx.ingress.kubernetes.io/use-regex: "true"

